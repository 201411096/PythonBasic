#------------------------------------------ (1) 단일값 출력
import numpy as np
arr = np.arange(1, 11)
print(arr)

## 세번째 요소 추출 ( 0부터 인덱스)
print(arr[2])

## 뒤에서 세번째 요소 추출 ( 뒤에서 인덱스는 -1부터)
print(arr[-3])

----------------------------------------------
## 1부터 9까지 nparray를 만들고 3행 3열 2차원 구조로 변경한후
## 두번째 행의 세번째 열의 값 추출

arr1 = np.arange(1,10)
arr1_1=arr1.reshape(3,3)
print(arr1_1)

print(arr1_1[1][2])

#------------------------------------------ (2) 슬라이싱 (:)
arr = np.arange(1, 10)
arr

## 2차원 배열에서 생성
"""
1 2 3
4 5 6
7 8 9
"""
arr1 = np.array([[1,2,3],[4,5,6],[7,8,9]])
print(arr1)

## 행렬에서 1, 2, 4, 5 추출
print(arr1[:2,:2])

## 행렬에서 4, 5, 6, 7, 8, 9 추출
print(arr1[1:3])

## 행렬에서 2, 3, 5, 6 추출
print(arr1[:2,1:])

## 행렬에서 1, 4 추출
print(arr1[:2,0])

## 행렬에서 전체 요소 추출
print(arr1[:3,:3])

-----------------------------------------------------------

# 2차원 ndarray에서 뒤의 오는 인덱스가 없으면 1차원으로 반환

import numpy as np
a1 = np.array([[1,2],
[3,4]])
print(a1)
a2 = a1.ravel()
print(a2)

#------------------------------------------ (3) 블린인덱싱
# 조건 필터링과 검색을 같이 하기에 자주 사용

arr = np.arange(1, 10)
ndarr = arr.reshape(3,3)
print(ndarr)

# 5보다 큰 요소들 추출
ndarr[ndarr>5]

# 8값 요소를 88로 변경
ndarr[ndarr==8]=88
ndarr