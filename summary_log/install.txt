--------------------
vmware , linux 설치 ( 리눅스 )
	ㄴ create a new virtual machine
	ㄴ i will install the operating system later (vm먼저 설치 -> os설치)
	ㄴ linux 선택, centos 7-64bit 선택
	ㄴ virtual machine name
		ㄴ CentOS7
	ㄴ maximum disk size 40gb 선택, store virtual disk as a single file 선택
	ㄴ edit virtual machine settings
		ㄴ memory 2048
		ㄴ cd/dvd 선택
			ㄴ use iso image file
1. 키보드 선택 - 영어, 한국어 선택

2. 소프트웨어 선택
	ㄴ 개발 및 창조를 위한... 하나 선택

3. 설치대상에서 파티션 수동 설정

/boot : 부팅할때 사용
/ (root) : 
swap : 가상메모리

root와 swap을 지움 -> +를 눌러서 swap 선택 5g 입력 -> 마운트 지점 추가
		 -> +를 눌러서 / 선택 입력안하고 마운트 지점 추가

완료 -> unknown 포맷 삭제 무시하고 변경사항 적용

4. 네트워크 호스트 이름

이더넷 켬

5. 설치 시작

root 비밀번호 : admin1234
계정 : centos
계정 비밀번호 : centos

6. 약관 동의

7. 루트 계정 접속법 -> 목록에 없습니까? 선택 -> root -> admin1234

8. 시스템 도구 -> 설정 -> 절전모드 끔, 화면 보호 끔

9. 지역언어 입력 소스 -> 한국어 삭제(-) -> 한국어(hangul) 선택
	ㄴ window spacebar로 바꿀 수 있음
----------------------------------------
리눅스 jdk 설치
	ㄴ 64비트 tar 파일 (압축파일 개념, zip, jar와 비슷)
	ㄴ 압축 풀어서 가져옴
	ㄴ yum -> rpm -> 스크립트 설정
----------------------------------------
yum
	ㄴ yum remove java*
		ㄴ 자바 관련 부분 삭제
----------------------------------------
rpm
	ㄴ rpm -qa | grep java
		ㄴ 자바로 시작하는 파일? 확인
----------------------------------------
@자동 스크립트 파일
	ㄴ 위에부터 순차적으로 적용?
		/etc/profile	(root계정 : 모든 사용자에게 적용)
		/etc/bashrc	(root계정 : 모든 사용자에게 적용)
		~/.bashrc		(사용자계정 : 해당 사용자만 적용)
		~/.bash_profile	(사용자계정 : 해당 사용자만 적용)
	ㄴ source : 스크립트파일 적용
----------------------------------------
스크립트 설정
	ㄴ 1. gedit /etc/profile
		export JAVA_HOME=/home/centos/jdk1.8
		export JAVA_OPTS="-Dfile.encoding=UTF-8"
		export classpath="."
			ㄴ 실행할때 기준을 현재 디렉토리로..
		export PATH=$JAVA_HOME/bin:$PATH
			ㄴ java 와 javac 명령어를 모든 디렉토리에서 사용이 가능해짐
			ㄴ 뒤에 (:)과 PATH를 지정해야 기존의 PATH를 유지할 수 있음
				ㄴ 윈도우에서의 (;)와 같은 역할
	ㄴ 2. source /etc/profile
		ㄴ 스크립트를 적용하는 명령어
	ㄴ 3. reboot
----------------------------------------
tomcat 설치
	ㄴ 터미널에서 실행
		wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.17/bin/apache-tomcat-9.0.17.tar.gz
	ㄴ tar파일 풀기 (zip파일 풀기)
		ㄴ tar xfvz apache-tomcat-9.0.17.tar.gz 
			ㄴ 옵션 확인해보기
	ㄴ mv apache-tomcat-9.0.17 tomcat9
		ㄴ 이름 변경
	ㄴ 실행확인
		ㄴ tomcat9/bin/startup.sh
	ㄴ 구동이 되는지 확인
		ㄴ http://localhost:8080
	ㄴ 방화벽 설정
		ㄴ firewall-cmd --permanent --add-port=8080/tcp
		ㄴ firewall-cmd --reload
----------------------------------------
tomcat
	ㄴ startup.bat -> 서버 시작
		ㄴ 실행
			ㄴ ---------------------------------------- 
			ㄴ tomcat9/bin/startup.sh
		ㄴ 구동이 되는지 확인
			ㄴ http://localhost:8080
	ㄴ shutdown.bat -> 서버 종료
	ㄴ ifconfig
		ㄴ window의 ipconfig
		ㄴ ifconfig의 맨윗값 사용
	ㄴ hostname -I
		ㄴ 앞에 값이 윈도우에서 접속할 경우
		ㄴ 뒤에 값이 리눅스에서 접속할 경우
----------------------------------------
윈도우 <-> 리눅스 간 파일이동
	ㄴ ssh
	ㄴ putty
	ㄴ winscp
	ㄴ 이클립스에서 export -> war
	ㄴ /home/centos/tomcat9/webapps 파일 밑으로 war 파일 이동
----------------------------------------
ssh (Secure Shell)
	ㄴ 설치
		ㄴ yum install openssh*
	ㄴ 방화벽 설정
		ㄴ firewall-cmd --permanent --add-port=22/tcp
		ㄴ firewall-cmd --reload
	ㄴ 설치 위치 확인
		ㄴ which sshd
	ㄴ 파일 실행
		ㄴ /usr/sbin/sshd
	ㄴ 프로세스 확인
		ㄴ ps -ef | grep sshd
			ㄴ 옵션 -e (every..)
			ㄴ 두개가 나오는데 하나는 grep 명령어임
		ㄴ 백그라운드로 실행되고 있는 것을 확인할 수 있음
	ㄴ 프로세스 확인2
		ㄴ systemctl status sshd
			ㄴ sshd의 상태 확인
	ㄴ 이후에는 윈도우에서 putty 설치
----------------------------------------
putty 설치
	ㄴ 윈도우에서
	ㄴ 64bit window..
	ㄴ 리눅스의 ip주소와 saved_session을 입력하고 save 클릭
		ㄴ ip주소 입력할 때 http 빼기
	ㄴ 경고창 예
----------------------------------------
winscp 설치
	ㄴ http://winscp.net/
	ㄴ putty를 켜둔상태에서..?
	ㄴ putty ssh client에 저장된 세션 및 사이트.. -> 예
----------------------------------------
오라클 설치
	ㄴ references - linux_oracle.docx
----------------------------------------
리눅스에서 배포할 프로젝트에 추가

<repositories>
 <repository>
 <id>oracle</id> 
 <name>ORACLE JDBC Repository</name> 
 <url>http://maven.jahia.org/maven2</url>
 </repository> 
 </repositories>
<!-- JDBC6 -->
<dependency> 
 <groupId>com.oracle</groupId> 
 <artifactId>ojdbc7</artifactId> 
 <version>12.1.0.2</version>
</dependency>
